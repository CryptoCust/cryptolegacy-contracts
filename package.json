{
  "name": "cryptolegacy-contracts",
  "description": "Smart contracts for CryptoLegacy â€“ a secure, upgradeable system for automated crypto asset transfer and recovery in cases of emergency, loss, or inactivity. Powered by EIP-2535 Diamond Standard for modular plugin-based execution.",
  "version": "1.0.0",
  "main": "npm run test",
  "directories": {
    "lib": "lib",
    "test": "test"
  },
  "scripts": {
    "testm": "forge test -vvv --optimize false --mt",
    "test": "forge test -vvv --optimize false",
    "flat": "node ./flat-all.js",
    "contracts-size": "forge build --sizes",
    "coverage-summary": "forge coverage --report summary --no-match-coverage '((script|test|(contracts/(mocks|interfaces)))/.*|libraries/LibDiamond.sol|libraries/LibCreate3.sol)'",
    "coverage-lcov": "forge coverage --report lcov --no-match-coverage '((script|test|(contracts/(mocks|interfaces)))/.*|libraries/LibDiamond.sol|libraries/LibCreate3.sol)'",
    "coverage-json": "yarn && npm run coverage-lcov && node ./lcov-parse.js",
    "coverage-html": "npm run coverage-lcov && npm run generate-html",
    "generate-html": "genhtml lcov.info -o report --branch-coverage --ignore-errors inconsistent,category",
    "clear": "rm -rf broadcast cache",
    "build": "npm run clear && forge build",
    "git-last-diff": "git show HEAD --unified=999999 > commit_diff.txt",
    "export-verify-contract": "forge verify-contract $ADDRESS $CONTRACT --optimizer-runs=100 --constructor-args \"$ARGS\" --show-standard-json-input > etherscan.json",
    "deploy-prod-mainnet": "npm run clear && source .env && forge script --chain mainnet script/CryptoLegacyFactory.s.sol --rpc-url $MAINNET_RPC_URL --broadcast --verify -vvvv --evm-version shanghai --private-key $PRIVATE_KEY --non-interactive",
    "deploy-mainnet": "npm run clear && source .env && forge script --chain mainnet script/MockCryptoLegacyFactory.s.sol --rpc-url $MAINNET_RPC_URL --broadcast --verify -vvvv --evm-version shanghai --private-key $PRIVATE_KEY --non-interactive",
    "redeploy-mainnet": "npm run clear && source .env && forge script --chain mainnet script/UpgradeMockCryptoLegacyFactory.s.sol --rpc-url $ARBITRUM_RPC_URL --broadcast --verify -vvvv --evm-version shanghai --private-key $PRIVATE_KEY --non-interactive",
    "deploy-prod-arb": "npm run clear && source .env && forge script --chain arbitrum script/CryptoLegacyFactory.s.sol --rpc-url $ARBITRUM_RPC_URL --broadcast --verify -vvvv --evm-version shanghai --private-key $PRIVATE_KEY --non-interactive",
    "deploy-arb": "npm run clear && source .env && forge script --chain arbitrum script/MockCryptoLegacyFactory.s.sol --rpc-url $ARBITRUM_RPC_URL --broadcast --verify -vvvv --evm-version shanghai --private-key $PRIVATE_KEY --non-interactive",
    "redeploy-arb": "npm run clear && source .env && forge script --chain arbitrum script/UpgradeMockCryptoLegacyFactory.s.sol --rpc-url $ARBITRUM_RPC_URL --broadcast --verify -vvvv --evm-version shanghai --private-key $PRIVATE_KEY --non-interactive",
    "deploy-prod-base": "npm run clear && source .env && forge script --chain base script/CryptoLegacyFactory.s.sol --rpc-url $BASE_RPC_URL --broadcast --verify -vvvv --evm-version shanghai --private-key $PRIVATE_KEY --non-interactive",
    "deploy-base": "npm run clear && source .env && forge script --chain base script/MockCryptoLegacyFactory.s.sol --rpc-url $BASE_RPC_URL --broadcast --verify -vvvv --evm-version shanghai --private-key $PRIVATE_KEY --non-interactive",
    "redeploy-base": "npm run clear && source .env && forge script --chain base script/UpgradeMockCryptoLegacyFactory.s.sol --rpc-url $BASE_RPC_URL --broadcast --verify -vvvv --evm-version shanghai --private-key $PRIVATE_KEY --non-interactive",
    "deploy-prod-optimism": "npm run clear && source .env && forge script --chain optimism script/CryptoLegacyFactory.s.sol --rpc-url $OPTIMISM_RPC_URL --broadcast --verify -vvvv --evm-version shanghai --private-key $PRIVATE_KEY --non-interactive",
    "deploy-optimism": "npm run clear && source .env && forge script --chain optimism script/MockCryptoLegacyFactory.s.sol --rpc-url $OPTIMISM_RPC_URL --broadcast --verify -vvvv --evm-version shanghai --private-key $PRIVATE_KEY --non-interactive",
    "redeploy-optimism": "npm run clear && source .env && forge script --chain optimism script/UpgradeMockCryptoLegacyFactory.s.sol --rpc-url $OPTIMISM_RPC_URL --broadcast --verify -vvvv --evm-version shanghai --private-key $PRIVATE_KEY --non-interactive",
    "deploy-prod-linea": "npm run clear && source .env && forge script --chain linea script/CryptoLegacyFactory.s.sol --rpc-url $LINEA_RPC_URL --broadcast --verify -vvvv --evm-version paris --private-key $PRIVATE_KEY --non-interactive",
    "deploy-linea": "npm run clear && source .env && forge script --chain linea script/MockCryptoLegacyFactory.s.sol --rpc-url $LINEA_RPC_URL --broadcast --verify -vvvv --evm-version paris --private-key $PRIVATE_KEY --non-interactive",
    "redeploy-linea": "npm run clear && source .env && forge script --chain linea script/UpgradeMockCryptoLegacyFactory.s.sol --rpc-url $LINEA_RPC_URL --broadcast --verify -vvvv --evm-version paris --private-key $PRIVATE_KEY --non-interactive"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "lcov-parse": "^1.0.0"
  }
}
